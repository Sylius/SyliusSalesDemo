name: Deploy Sylius Sales Demo

on:
    push:
        branches:
            - master

jobs:
    deploy:
        runs-on: ubuntu-latest
        env:
            SERVER_NAME: sylius-sales-demo
        steps:
            -
                name: Checkout Code
                uses: actions/checkout@v3
            -
                name: Install Digital Ocean CLI
                uses: digitalocean/action-doctl@v2
                with:
                    token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
                    
            -
                name: Set Up QEMU
                uses: docker/setup-qemu-action@v2
            -
                name: Set Up Docker Buildx
                uses: docker/setup-buildx-action@v2
            -
                name: Login to Digital Ocean Container Registry
                uses: docker/login-action@v2
                with:
                    registry: registry.digitalocean.com
                    username: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
                    password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

            -
                name: Build PHP Image
                uses: docker/build-push-action@v3
                with:
                    push: true
                    tags: registry.digitalocean.com/sylius/sales-demo-php:$GITHUB_SHA
                    platforms: linux/amd64
                    cache-from: type=gha
                    cache-to: type=gha
                    load: false

            -
                name: Build NGiNX Image
                uses: docker/build-push-action@v3
                with:
                    push: true
                    tags: registry.digitalocean.com/sylius/sales-demo-nginx:$GITHUB_SHA
                    platforms: linux/amd64
                    cache-from: type=gha
                    cache-to: type=gha
                    load: false

            -
                name: Prepare Deployment Script
                run: |
                    touch deploy.sh
                    echo "#!/bin/bash" >> deploy.sh
                    echo "curl -fsSL https://get.docker.com -o get-docker.sh" >> deploy.sh
                    echo "sudo sh get-docker.sh" >> deploy.sh
                    echo "git clone https://github.com/Sylius/SyliusSalesDemo.git" >> deploy.sh
                    echo "cd SyliusSalesDemo || exit" >> deploy.sh
#                    echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} SENTRY_DSN=${{ secrets.SENTRY_DSN }} docker compose -f docker-compose.prod.yml build --build-arg SYLIUS_PLUS_TOKEN=${{ secrets.SYLIUS_PLUS_TOKEN }} || exit" >> deploy.sh
                    echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
                         SENTRY_DSN=${{ secrets.SENTRY_DSN }} \
                         HOME_HOSTNAME=home.sales.sylius.com \
                         FASHION_HOSTNAME=fashion.sales.sylius.com \
                         IMAGE_VERSION=$GITHUB_SHA \
                         docker compose -f docker-compose.prod.yml up -d || exit" >> deploy.sh
            -
                name: Create Droplet
                run: |
                    doctl compute droplet create ${{ env.SERVER_NAME }}-$GITHUB_SHA \
                        --ssh-keys ${{ secrets.DIGITALOCEAN_ADMIN_SSH_KEY }} \
                        --size s-1vcpu-1gb-intel \
                        --image ubuntu-22-04-x64 \
                        --region ams3 \
                        --tag-name sylius-sales-demo \
                        --user-data-file deploy.sh \
                        --format ID \
                        --wait
            -
                name: Remove Old Droplets
                run: |
                    chmod +x .digitalocean/remove-old-droplets.sh
                    ./.digitalocean/remove-old-droplets.sh
